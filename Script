import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

sns.set(style="whitegrid")

try:
    df = sns.load_dataset('titanic')
except Exception as e:
    print(f"Could not load dataset. Please check your internet connection. Error: {e}")
    # As a fallback, create a dummy dataframe for the script to run
    data = {'survived': [0, 1, 1, 0], 'pclass': [3, 1, 3, 1],
            'sex': ['male', 'female', 'female', 'male'], 'age': [22, 38, 26, 35],
            'sibsp': [1, 1, 0, 1], 'parch': [0, 0, 0, 0],
            'fare': [7.25, 71.28, 7.92, 53.1], 'embarked': ['S', 'C', 'S', 'S'],
            'class': ['Third', 'First', 'Third', 'First'], 'who': ['man', 'woman', 'woman', 'man'],
            'adult_male': [True, False, False, True], 'deck': [np.nan, 'C', np.nan, 'C'],
            'embark_town': ['Southampton', 'Cherbourg', 'Southampton', 'Southampton'],
            'alive': ['no', 'yes', 'yes', 'no'], 'alone': [False, False, True, False]}
    df = pd.DataFrame(data)

print("--- 1. Initial Data Inspection ---")
print("\nFirst 5 rows of the dataset:")
print(df.head())

print("\n\nDataset Information:")
df.info()

print("\n\nDescriptive Statistics for numerical columns:")
print(df.describe())

print("\n\nDescriptive Statistics for categorical columns:")
print(df.describe(include=['object', 'category']))


print("\n--- 2. Missing Value Analysis ---")
print("\nMissing values per column:")
missing_values = df.isnull().sum()
print(missing_values[missing_values > 0])

df['age'].fillna(df['age'].median(), inplace=True)

df['embarked'].fillna(df['embarked'].mode()[0], inplace=True)
df['embark_town'].fillna(df['embark_town'].mode()[0], inplace=True)

df.drop('deck', axis=1, inplace=True)

print("\n\nDataset after handling missing values:")
print(df.isnull().sum())

print("\n--- 3. Data Visualization ---")
print("Generating plots... (Close plot windows to continue script)")


plt.figure(figsize=(10, 6))
sns.histplot(df['age'], bins=30, kde=True)
plt.title('Distribution of Passenger Age')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(8, 5))
sns.countplot(x='survived', data=df)
plt.title('Survival Count (0 = No, 1 = Yes)')
plt.xticks([0, 1], ['Did not Survive', 'Survived'])
plt.xlabel('Survival Status')
plt.ylabel('Number of Passengers')
plt.show()

plt.figure(figsize=(8, 5))
sns.countplot(x='pclass', data=df)
plt.title('Passenger Count by Class')
plt.xlabel('Passenger Class')
plt.ylabel('Number of Passengers')
plt.show()



plt.figure(figsize=(8, 5))
sns.barplot(x='sex', y='survived', data=df)
plt.title('Survival Rate by Sex')
plt.ylabel('Survival Rate')
plt.xlabel('Sex')
plt.show()

plt.figure(figsize=(8, 5))
sns.barplot(x='pclass', y='survived', data=df)
plt.title('Survival Rate by Passenger Class')
plt.ylabel('Survival Rate')
plt.xlabel('Passenger Class')
plt.show()

plt.figure(figsize=(10, 6))
sns.kdeplot(df[df['survived'] == 1]['age'], label='Survived', shade=True)
sns.kdeplot(df[df['survived'] == 0]['age'], label='Did not Survive', shade=True)
plt.title('Age Distribution of Survivors vs. Non-Survivors')
plt.xlabel('Age')
plt.legend()
plt.show()


plt.figure(figsize=(12, 8))
numeric_cols = df.select_dtypes(include=np.number)
correlation_matrix = numeric_cols.corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Correlation Matrix of Numerical Features')
plt.show()


print("\n--- 4. Feature Engineering ---")
# Combine 'SibSp' (siblings/spouses) and 'Parch' (parents/children) into a 'FamilySize' feature.
df['FamilySize'] = df['sibsp'] + df['parch'] + 1 # +1 to include the person themselves

plt.figure(figsize=(10, 6))
sns.barplot(x='FamilySize', y='survived', data=df)
plt.title('Survival Rate by Family Size')
plt.xlabel('Family Size')
plt.ylabel('Survival Rate')
plt.show()

print("\nEDA script finished.")
